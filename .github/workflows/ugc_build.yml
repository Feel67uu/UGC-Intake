name: UGC Build
on:
  repository_dispatch:
    types: [ugc_build]

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Extract inputs
        id: inp
        run: |
          echo "job_id=$(jq -r '.client_payload.job_id' $GITHUB_EVENT_PATH)" >> $GITHUB_OUTPUT

      - name: Load job json (safe)
        run: |
          FILE="jobs/${{ steps.inp.outputs.job_id }}.json"
          test -f "$FILE" || (echo "job file not found: $FILE"; exit 1)
          jq -r '.payload.text // ""' "$FILE" > /tmp/text.txt
          jq -r '.payload.media[]? | "\(.type) \(.file_id)"' "$FILE" > /tmp/media.list || true
          echo "DRAFT_CHAT=${{ secrets.TG_DRAFT_CHAT_ID }}" >> $GITHUB_ENV

      - name: Install tools
        run: |
          sudo apt-get update -y
          sudo apt-get install -y ffmpeg imagemagick jq curl

      - name: Download media from Telegram
        env:
          # скачиваем тем ботом, который получил исходные file_id (инбокс)
          TG_BOT_TOKEN: ${{ secrets.TG_BOT_TOKEN_INBOX }}
        run: |
          mkdir -p work/in work/out
          > /tmp/downloaded.list
          i=0
          if [ -s /tmp/media.list ]; then
            while read -r TYPE ID; do
              [ -n "$ID" ] || continue
              FP=$(curl -s "https://api.telegram.org/bot${TG_BOT_TOKEN}/getFile?file_id=$ID" | jq -r '.result.file_path')
              URL="https://api.telegram.org/file/bot${TG_BOT_TOKEN}/${FP}"
              EXT="${FP##*.}"
              SRC="work/in/${i}.${EXT}"
              curl -s -L -o "$SRC" "$URL"
              echo "$TYPE $SRC" >> /tmp/downloaded.list
              i=$((i+1))
            done < /tmp/media.list
          fi

      - name: Simple overlays (demo)
        run: |
          mkdir -p work/out
          > /tmp/out.list
          if [ -s /tmp/downloaded.list ]; then
            while read -r TYPE SRC; do
              if [ "$TYPE" = "photo" ]; then
                DST="work/out/$(basename "${SRC%.*}").jpg"
                convert "$SRC" -gravity south \
                  -fill white -undercolor "#00000080" -pointsize 36 \
                  -annotate +0+20 "ПроКис СВЕЖАК" "$DST"
                echo "photo $DST" >> /tmp/out.list
              else
                DST="work/out/$(basename "${SRC%.*}").mp4"
                ffmpeg -y -i "$SRC" \
                  -vf "drawtext=text='ПроКис СВЕЖАК':fontcolor=white:box=1:boxcolor=black@0.5:boxborderw=10:fontsize=28:x=(w-tw)/2:y=h-80" \
                  -c:a copy "$DST"
                echo "video $DST" >> /tmp/out.list
              fi
            done < /tmp/downloaded.list
          fi

      - name: Send to DRAFT as album or single (via DRAFT bot)
        shell: bash
        env:
          # отправляем ботом, который рулит черновиком
          TG_BOT_TOKEN: ${{ secrets.TG_BOT_TOKEN_DRAFT }}
        run: |
          set -e

          # На всякий случай: если куда-то делись curl/jq — дотащим
          if ! command -v curl >/dev/null 2>&1; then
            sudo apt-get update -y && sudo apt-get install -y curl
          fi
          if ! command -v jq >/dev/null 2>&1; then
            sudo apt-get update -y && sudo apt-get install -y jq
          fi

          # Пишем отдельный скрипт отправки и нормализуем переводы строк
          cat >/tmp/send_to_draft.sh <<'SH'
          #!/usr/bin/env bash
          set -e

          CHAT="$DRAFT_CHAT"
          TEXT="$(cat /tmp/text.txt 2>/dev/null || true)"
          COUNT=$(wc -l < /tmp/out.list 2>/dev/null || echo 0)

          if [ "$COUNT" -gt 1 ]; then
            MEDIA_JSON='[]'
            declare -a FILE_ARGS=()
            i=1
            while read -r TYPE PATH; do
              [ "$TYPE" = "photo" ] && T="photo" || T="video"
              CAP=""
              if [ $i -eq 1 ] && [ -n "$TEXT" ]; then CAP="$TEXT"; fi

              if [ -n "$CAP" ]; then
                ITEM=$(jq -n --arg t "$T" --arg m "attach://f$i" --arg c "$CAP" '{type:$t, media:$m, caption:$c}')
              else
                ITEM=$(jq -n --arg t "$T" --arg m "attach://f$i" '{type:$t, media:$m}')
              fi
              MEDIA_JSON=$(jq --argjson it "$ITEM" '. + [$it]' <<<"$MEDIA_JSON")

              FILE_ARGS+=(-F "f${i}=@${PATH}")
              i=$((i+1))
            done < /tmp/out.list

            /usr/bin/curl -s -X POST "https://api.telegram.org/bot${TG_BOT_TOKEN}/sendMediaGroup" \
              -F chat_id="$CHAT" \
              -F "media=$MEDIA_JSON" \
              "${FILE_ARGS[@]}" >/dev/null
          else
            read -r TYPE PATH < /tmp/out.list || true
            if [ "$TYPE" = "photo" ]; then
              /usr/bin/curl -s -X POST "https://api.telegram.org/bot${TG_BOT_TOKEN}/sendPhoto" \
                -F chat_id="$CHAT" -F caption="$TEXT" -F photo="@$PATH" >/dev/null
            elif [ "$TYPE" = "video" ]; then
              /usr/bin/curl -s -X POST "https://api.telegram.org/bot${TG_BOT_TOKEN}/sendVideo" \
                -F chat_id="$CHAT" -F caption="$TEXT" -F video="@$PATH" >/dev/null
            else
              echo "Nothing to send."
            fi
          fi
          SH

          # убрать CRLF, если вдруг попали
          sed -i 's/\r$//' /tmp/send_to_draft.sh
          chmod +x /tmp/send_to_draft.sh
          bash /tmp/send_to_draft.sh
