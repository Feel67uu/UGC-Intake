name: UGC Intake
on:
  repository_dispatch:
    types: [ugc_intake]

permissions:
  contents: write
  actions: read

jobs:
  intake:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Make job id
        id: mk
        run: echo "job_id=ugc-$(date +%Y%m%d-%H%M%S)-$RANDOM" >> $GITHUB_OUTPUT

      - name: Extract payload
        id: p
        run: |
          echo "chat=$(jq -r '.client_payload.chat_id' $GITHUB_EVENT_PATH)" >> $GITHUB_OUTPUT
          echo "has_group=$(jq -e '.client_payload.message_ids' $GITHUB_EVENT_PATH >/dev/null && echo yes || echo no)" >> $GITHUB_OUTPUT
          { jq -e '.client_payload.message_id' $GITHUB_EVENT_PATH >/dev/null && \
            echo "mid=$(jq -r '.client_payload.message_id' $GITHUB_EVENT_PATH)" >> $GITHUB_OUTPUT; } || true
          { jq -e '.client_payload.message_ids' $GITHUB_EVENT_PATH >/dev/null && \
            jq -r '.client_payload.message_ids[]' $GITHUB_EVENT_PATH > /tmp/mids.txt; } || true
          echo "city=$(jq -r '.client_payload.city // ""' $GITHUB_EVENT_PATH)" >> $GITHUB_OUTPUT

      - name: Build keyboard JSON
        id: kb
        run: |
          KB=$(jq -cn --arg id "${{ steps.mk.outputs.job_id }}" \
            '{inline_keyboard:[[{"text":"Одобрить","callback_data":("act=iw&id="+$id)}],[{"text":"Отклонить","callback_data":("act=rj&id="+$id)}]]}')
          echo "kb=${KB}" >> $GITHUB_OUTPUT

      - name: Copy to INBOX (single)
        if: steps.p.outputs.has_group == 'no'
        env:
          TG_BOT_TOKEN: ${{ secrets.TG_BOT_TOKEN }}
          TG_INBOX_CHAT_ID: ${{ secrets.TG_INBOX_CHAT_ID }}
        run: |
          RESP=$(curl -s -X POST "https://api.telegram.org/bot${TG_BOT_TOKEN}/copyMessage" \
            -d chat_id="${TG_INBOX_CHAT_ID}" \
            -d from_chat_id="${{ steps.p.outputs.chat }}" \
            -d message_id="${{ steps.p.outputs.mid }}" \
            --data-urlencode reply_markup='${{ steps.kb.outputs.kb }}')
          echo "$RESP" | jq -r '.result.message_id' > /tmp/inbox_mid.txt

      - name: Copy to INBOX (album)
        if: steps.p.outputs.has_group == 'yes'
        env:
          TG_BOT_TOKEN: ${{ secrets.TG_BOT_TOKEN }}
          TG_INBOX_CHAT_ID: ${{ secrets.TG_INBOX_CHAT_ID }}
        run: |
          mapfile -t MIDS < /tmp/mids.txt
          LAST=${MIDS[${#MIDS[@]}-1]}
          for MID in "${MIDS[@]}"; do
            if [ "$MID" = "$LAST" ]; then
              RESP=$(curl -s -X POST "https://api.telegram.org/bot${TG_BOT_TOKEN}/copyMessage" \
                -d chat_id="${TG_INBOX_CHAT_ID}" \
                -d from_chat_id="${{ steps.p.outputs.chat }}" \
                -d message_id="$MID" \
                --data-urlencode reply_markup='${{ steps.kb.outputs.kb }}')
              echo "$RESP" | jq -r '.result.message_id' > /tmp/inbox_mid.txt
            else
              curl -s -X POST "https://api.telegram.org/bot${TG_BOT_TOKEN}/copyMessage" \
                -d chat_id="${TG_INBOX_CHAT_ID}" \
                -d from_chat_id="${{ steps.p.outputs.chat }}" \
                -d message_id="$MID" >/dev/null
            fi
          done

      - name: Save job file
        run: |
          mkdir -p jobs
          jq -n \
            --arg id "${{ steps.mk.outputs.job_id }}" \
            --arg status "draft_ugc" \
            --arg city "${{ steps.p.outputs.city }}" \
            --argjson payload "$(jq '.client_payload' $GITHUB_EVENT_PATH)" \
            --arg inbox_message_id "$(cat /tmp/inbox_mid.txt)" \
            '{job_id:$id,status:$status,city:$city,inbox_message_id:$inbox_message_id,payload:$payload,created_at:(now|todate)}' \
            > jobs/${{ steps.mk.outputs.job_id }}.json
          git add jobs/${{ steps.mk.outputs.job_id }}.json
          git commit -m "UGC draft: ${{ steps.mk.outputs.job_id }}" || true
          git push
